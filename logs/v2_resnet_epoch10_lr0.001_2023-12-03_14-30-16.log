2023-12-03_14-30-16: config: {'n_epochs': 10, 'batch_size': 32, 'h': 224, 'w': 224, 'lr': 0.001, 'optimizer': 'sgd', 'momentum': 0.9, 'device': 'cuda', 'n_gpus': 2, 'kernel_size': 3, 'flatten': False, 'model': 'resnet', 'num_blocks_list': [2, 2, 2, 2], 'is_batchnorm': False}
2023-12-03_14-30-16: conv1.0.weight: torch.Size([64, 3, 3, 3])
2023-12-03_14-30-16: conv2_x.0.sequence.0.weight: torch.Size([64, 64, 3, 3])
2023-12-03_14-30-16: conv2_x.0.sequence.2.weight: torch.Size([64, 64, 3, 3])
2023-12-03_14-30-16: conv2_x.1.sequence.0.weight: torch.Size([64, 64, 3, 3])
2023-12-03_14-30-16: conv2_x.1.sequence.2.weight: torch.Size([64, 64, 3, 3])
2023-12-03_14-30-16: conv3_x.0.sequence.0.weight: torch.Size([128, 64, 3, 3])
2023-12-03_14-30-16: conv3_x.0.sequence.2.weight: torch.Size([128, 128, 3, 3])
2023-12-03_14-30-16: conv3_x.0.shortcut.0.weight: torch.Size([128, 64, 1, 1])
2023-12-03_14-30-16: conv3_x.1.sequence.0.weight: torch.Size([128, 128, 3, 3])
2023-12-03_14-30-16: conv3_x.1.sequence.2.weight: torch.Size([128, 128, 3, 3])
2023-12-03_14-30-16: conv4_x.0.sequence.0.weight: torch.Size([256, 128, 3, 3])
2023-12-03_14-30-16: conv4_x.0.sequence.2.weight: torch.Size([256, 256, 3, 3])
2023-12-03_14-30-16: conv4_x.0.shortcut.0.weight: torch.Size([256, 128, 1, 1])
2023-12-03_14-30-16: conv4_x.1.sequence.0.weight: torch.Size([256, 256, 3, 3])
2023-12-03_14-30-16: conv4_x.1.sequence.2.weight: torch.Size([256, 256, 3, 3])
2023-12-03_14-30-16: conv5_x.0.sequence.0.weight: torch.Size([512, 256, 3, 3])
2023-12-03_14-30-16: conv5_x.0.sequence.2.weight: torch.Size([512, 512, 3, 3])
2023-12-03_14-30-16: conv5_x.0.shortcut.0.weight: torch.Size([512, 256, 1, 1])
2023-12-03_14-30-16: conv5_x.1.sequence.0.weight: torch.Size([512, 512, 3, 3])
2023-12-03_14-30-16: conv5_x.1.sequence.2.weight: torch.Size([512, 512, 3, 3])
2023-12-03_14-30-16: fc.weight: torch.Size([2, 512])
2023-12-03_14-30-16: fc.bias: torch.Size([2])
2023-12-03_14-30-16: 
Total parameters: 11,160,258;	Trainable: 11,160,258
